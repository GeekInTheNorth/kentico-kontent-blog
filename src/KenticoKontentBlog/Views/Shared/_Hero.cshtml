@using KenticoKontentBlog.Feature.Framework
@model KenticoKontentBlog.Feature.Framework.HeroModel

@functions 
{

    string GetHorizontalClass(ImageHorizontalAlignment alignment)
    {
        switch (alignment)
        {
            case ImageHorizontalAlignment.Left:
                return "page-hero--left";
            case ImageHorizontalAlignment.Right:
                return "page-hero--right";
            default:
                return null;
        }
    }

    string GetVerticalClass(ImageVerticalAlignment alignment)
    {
        switch (alignment)
        {
            case ImageVerticalAlignment.Top:
                return "page-hero--top";
            case ImageVerticalAlignment.Bottom:
                return "page-hero--bottom";
            default:
                return null;
        }
    }

    string GetTextColourClass(HeaderTextColour textColour)
    {
        switch (textColour)
        {
            case HeaderTextColour.Dark:
                return "text-dark";
            default:
                return "text-light";
        }
    }
}

<section id="hero" class="page-hero @GetHorizontalClass(Model.HorizontalAlignment) @GetVerticalClass(Model.VerticalAlignment) mb-3" style="background-image: url('@Model.Image');">
    <div class="container page-hero--content mb-3 text-center">
        <h1 class="@GetTextColourClass(Model.TextColour)">@Model.Title</h1>
        @if (Model.PublishedDate.HasValue)
        {
            <span class="@GetTextColourClass(Model.TextColour)">@($"Published: {Model.PublishedDate.Value:D}")</span>
        }
    </div>
</section>
